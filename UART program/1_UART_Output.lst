                        ; Origin set to 00000H
   0000                 		ORG  00000H
                        
                        ; CPU Type:
                        		CPU 1802
                        
                        ; Labels:
                        
                        ; Register Definitions:
   0000                 R0		EQU 0
   0001                 R1		EQU 1
   0002                 R2		EQU 2
   0003                 R3		EQU 3
   0004                 R4		EQU 4
   0005                 R5		EQU 5
   0006                 R6		EQU 6
   0007                 R7		EQU 7
   0008                 R8		EQU 8
   0009                 R9		EQU 9
   000a                 RA		EQU 10
   000b                 RB		EQU 11
   000c                 RC		EQU 12
   000d                 RD		EQU 13
   000e                 RE		EQU 14
   000f                 RF		EQU 15
                        
                        ; Start code segment
                        
                        ; antes de empezar suponemos que el dato a enviar está cargado en el registro R2.1 (porque R0 es el contador de programa)
   0000                 INICIO				; esta parte son solo definiciones
   0000   f8 00         		LDI 00H
   0002   b8            		PHI R8
   0003   f8 20         		LDI 20H
   0005   a8            		PLO R8		; se cargó 0020H en R8, que es la SUB de transmisión
   0006   f8 00         		LDI 00H
   0008   b9            		PHI R9
   0009   f8 40         		LDI 40H
   000b   a9            		PLO R9		; se cargó 0040H en R9, que es la SUB de DELAY1 (para la SUB de transmisión)
   000c   f8 00         		LDI 00H
   000e   ba            		PHI RA
   000f   f8 50         		LDI 50H
   0011   aa            		PLO RA		; se cargó 0050H en RA, que es la SUB de DELAY2 (para el programa principal)
                        ;acá está la rutina principal
   0012   7b            		SEQ				; empezamos ponindo la línea estado inactivo
   0013   f8 aa         LOOP	LDI 10101010B	; byte con bits alternantes en D
   0015   b2            		PHI R2			; cargo el valor de D a R2
   0016   d8            		SEP R8			; llamo a la SUB que transmite lo que está en R2
   0017   da            		SEP RA			; llamo a la SUB DELAY2
   0018   da            		SEP RA			; llamo a la SUB DELAY2
   0019   da            		SEP RA			; llamo a la SUB DELAY2
   001a   30 13         		BR LOOP			; salto incondicional
                        
                        
                        ;---------subrutina de trasmisión de datos-------------------------
   001f                 		ORG  0001FH
   001f   d0            BACK1	SEP R0		; retorna a la subrutina principal
   0020                 TRANSM
   0020   7b            		SEQ			; Q = 1 (línea en estado inactivo)
   0021   7a            		REQ  		; Q = 0 (bit de start)
   0022   d9            		SEP R9		; llamar subrutina de demora de 3,33 ms
   0023   f8 08         		LDI 08H		; carga el valor inmediato en D
   0025   a3            		PLO R3		; carga el valor de D en R3.0 (este es el contador para iterar cada bit del dato en R2)
                        					; tiene que ser la parte baja de R3, porque DEC R3 decrementa el registro entero de 16 bits
   0026   92            SHIFT	GHI R2		; carga el valor de R2.1 en D (acá se supone que está el byte que queremos transmitir)
   0027   fe            		SHL			; desplaza D a la izquierda, cargando el MSB en el bit DF
   0028   b2            		PHI R2		; carga el valor de D en R2.1
   0029   3b 2d         		BNF ESCERO	; salta si DF = 0
   002b   7b            		SEQ			; salida Q igual a 1
   002c   38            		SKP			; salta la siguiente instrucción de manera incondicional
   002d   7a            ESCERO	REQ			; salida Q igual a 0
   002e   d9            		SEP R9		; llamar subrutina de demora de 3,33 ms
   002f   23            		DEC R3		; decremento el contador
   0030   83            		GLO R3		; carga la parte baja de R3 en D
   0031   3a 26         		BNZ SHIFT	; salta si D != 0
   0033   7b            		SEQ			; Q = 1 (bit de stop) (el ingeniero Korpys dijo que ponga dos bits de stop (dos bit-time))
   0034   d9            		SEP R9		; llamar subrutina de demora de 3,33 ms dos veces
   0035   d9            		SEP R9
   0036   30 1f         		BR BACK1	; salto incondicional
                        
                        
                        
                        
                        
                        ;---------subrutina de ratardo de tranmisión-------------------------
   003f                 		ORG  0003FH
   003f   d8            BACK2	SEP R8			; retorna a subrutina de transmisión 1-Byte	2-Machine Cycles	1 time
   0040                 DELAY1
   0040   f8 50         		LDI  050H		; carga el valor inmediato en D		2-Byte	2-Machine Cycles	1 time
   0042   b1            		PHI  R1			; carga el valor de D en R1.1		1-Byte	2-Machine Cycles	1 time
   0043                 TIMER1
   0043   21            		DEC  R1     	; decrementa R1						1-Byte	2-Machine Cycles	R1 times
   0044   91            		GHI  R1     	; carga la parte alta de R1 en D	1-Byte	2-Machine Cycles	R1 times
   0045   3a 43         		BNZ  TIMER1   	; salta si D != 0					2-Byte	2-Machine Cycles	R1 times
   0047   30 3f         		BR   BACK2		; salto incondicional				2-Byte	2-Machine Cycles	1 time
                        
                        
                        ;---------subrutina de retardo del programa principal-------------------------
   004f                 		ORG  0004FH
   004f   d0            BACK3	SEP R0			; retorna a la rutina principal
   0050                 DELAY2
   0050   f8 ff         		LDI  0FFH		; carga el valor inmediato en D
   0052   b1            		PHI  R1			; carga el valor de D en R1.1
   0053                 TIMER2
   0053   21            		DEC  R1     	; decrementa R1
   0054   91            		GHI  R1     	; carga la parte alta de R1 en D
   0055   3a 53         		BNZ  TIMER2   	; salta si D != 0
   0057   30 4f         		BR   BACK3		; salto incondicional
   0059                 		END
001f  BACK1         003f  BACK2         004f  BACK3         0040  DELAY1    
0050  DELAY2        002d  ESCERO        0000  INICIO        0013  LOOP      
0000  R0            0001  R1            0002  R2            0003  R3        
0004  R4            0005  R5            0006  R6            0007  R7        
0008  R8            0009  R9            000a  RA            000b  RB        
000c  RC            000d  RD            000e  RE            000f  RF        
0026  SHIFT         0043  TIMER1        0053  TIMER2        0020  TRANSM    
